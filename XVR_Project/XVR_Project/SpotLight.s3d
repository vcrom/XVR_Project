#ifndef _SPOT_LIGHT_
#define _SPOT_LIGHT_

static var DEG_TO_RAD = 3.14/180;
static var RAD_TO_DEG = 180/3.14;

class  SpotlLight {
	var light;
	var pitch, yaw;
	var look_at_vector;
	var position;
	
	var ambient_light;
	var diffuse_light;
	var specular_light;
	
	var light_renderable_object;
	Initialize(pos);
	Rotate(y, p);
	Update();
	SetRenderableObject(obj);
	Render();
};

function SpotlLight::Initialize(pos) 
{
	light = CVmLight();
	pitch = 0;
	yaw = 0;
	position = pos;
	light_renderable_object = null;
	
	
	light.SetAmbient([0.0, 0.0, 0.0]);
	light.SetDiffuse([0.7, 0.7, 0.7]);
	light.SetSpecular([0.9, 0.9, 0.9]);
	//light.SetDirection(0,0,1);
	light.SetPosition(position);
	light.SetSpotDirection([0,0,1]);
	//light.SetPosition(position);
	//light.SetParameter(GL_SPOT_EXPONENT, 45);
	//light.SetParameter(GL_SPOT_CUTOFF, 100);
	//light.Enable();
}

function SpotlLight::SetRenderableObject(mesh)
{
	mesh.Normalize(2); 
	mesh.CenterBoundingBox();
	//light_renderable_object = CVmObj(mesh);
	light_renderable_object = CVmObj();
	light_renderable_object.LinkToMesh(mesh);
	
	
	var mat = CVmMaterial();
	mat.Ambient = [1,0,0];
	mat.Diffuse = [0,1,0];
	
	//light_renderable_object.ForceMaterial(mat, true); 
	
	light_renderable_object.SetPosition(position);
}

function SpotlLight::Render() 
{
	//light.Enable();
	glPushAttrib(GL_LIGHTING_BIT | GL_LINE_BIT | GL_CURRENT_BIT);
	if(light_renderable_object != null)
	{
		light_renderable_object.Draw();
		//position[2] += 0.01;  
	}
	glPopAttrib();
}

function SpotlLight::Update()
{
	//update lookat 
	look_at_vector = [0, 0, 1];
	//yaw rotation Y
	look_at_vector[0] = cos(yaw)*look_at_vector[0] + sin(yaw)*look_at_vector[2];
	look_at_vector[1] = look_at_vector[1];
	look_at_vector[2] = -sin(yaw)*look_at_vector[0] + cos(yaw)*look_at_vector[2];
	
	//pitch rotation X
	look_at_vector[0] = look_at_vector[0];
	look_at_vector[1] = cos(pitch)*look_at_vector[1] - sin(pitch)*look_at_vector[2];
	look_at_vector[2] = sin(pitch)*look_at_vector[1] + cos(pitch)*look_at_vector[2];
	
	//Update teh light itself
	//outputln("\nLook: ", look_at_vector);
	//outputln("\n L+ P: ", position[0]+look_at_vector[0]," ", position[1]+look_at_vector[1]," ", position[2]+look_at_vector[2]);
	light.SetSpotDirection(look_at_vector[0],look_at_vector[1], look_at_vector[2]);	
	light.SetPosition(position);
	//light.SetDirection(look_at_vector);
	
	//Update renderable obj
	if(light_renderable_object != null) 
	{
		light_renderable_object.SetPosition(position);
		light_renderable_object.SetRotation(pitch*RAD_TO_DEG, [1,0,0]);
		light_renderable_object.SetRotation(yaw*RAD_TO_DEG, [0,1,0]);
	}

	
} 

function SpotlLight::Rotate(p, y) {
	yaw = (yaw + y*DEG_TO_RAD);
	pitch = (pitch + p*DEG_TO_RAD);
/* 	
	if(light_renderable_object != null) 
	{
		light_renderable_object.Rotate(p, [1,0,0]);
		light_renderable_object.Rotate(y, [0,1,0]);
	}
	*/
	Update();
}

#endif _SPOT_LIGHT_
